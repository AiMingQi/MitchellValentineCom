{"remainingRequest":"C:\\Users\\cafev\\Projects\\MVCDev\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\cafev\\Projects\\MVCDev\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\cafev\\Projects\\MVCDev\\src\\components\\SimpleStorage.vue","dependencies":[{"path":"C:\\Users\\cafev\\Projects\\MVCDev\\src\\components\\SimpleStorage.vue","mtime":1525963832575},{"path":"C:\\Users\\cafev\\Projects\\MVCDev\\package.json","mtime":1525963832550},{"path":"C:\\Users\\cafev\\Projects\\MVCDev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"C:\\Users\\cafev\\Projects\\MVCDev\\node_modules\\babel-loader\\lib\\index.js","mtime":1509489566000},{"path":"C:\\Users\\cafev\\Projects\\MVCDev\\node_modules\\vue-loader\\lib\\selector.js","mtime":1514695968000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Web3 from 'web3';\nimport contract from 'truffle-contract';\nimport artifacts from '../../build/contracts/SimpleStorage.json';\nvar SimpleStorage = contract(artifacts);\nexport default {\n  name: 'SimpleStorage',\n  data: function data() {\n    return {\n      message: null,\n      contractAddress: null,\n      account: null,\n      newValue: 0,\n      currentNumber: 0\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    if (typeof web3 !== 'undefined') {\n      console.warn(\"Using web3 detected from external source. If you find that your accounts don't appear or you have 0 Fluyd, ensure you've configured that source properly. If using MetaMask, see the following link. Feel free to delete this warning. :) http://truffleframework.com/tutorials/truffle-and-metamask\"); // Use Mist/MetaMask's provider\n\n      web3 = new Web3(web3.currentProvider);\n    } else {\n      console.warn(\"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live, as it's inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask\"); // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n\n      web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\"));\n    }\n\n    SimpleStorage.setProvider(web3.currentProvider);\n    web3.eth.getAccounts(function (err, accs) {\n      if (err != null) {\n        console.error(err);\n        _this.message = \"There was an error fetching your accounts. Do you have Metamask, Mist installed or an Ethereum node running? If not, you might want to look into that\";\n        return;\n      }\n\n      if (accs.length == 0) {\n        _this.message = \"Couldn't get any accounts! Make sure your Ethereum client is configured correctly.\";\n        return;\n      }\n\n      _this.account = accs[0];\n      SimpleStorage.deployed().then(function (instance) {\n        return instance.address;\n      }).then(function (address) {\n        _this.contractAddress = address;\n\n        _this.updateCurrentNumber();\n      });\n    });\n  },\n  methods: {\n    updateValue: function updateValue() {\n      var _this2 = this;\n\n      this.message = \"Transaction started\";\n      return SimpleStorage.deployed().then(function (instance) {\n        return instance.set(_this2.newValue, {\n          from: _this2.account\n        });\n      }).then(function () {\n        _this2.message = \"Transaction done\";\n\n        _this2.updateCurrentNumber();\n      }).catch(function (e) {\n        console.error(e);\n        _this2.message = \"Transaction failed\";\n      });\n    },\n    updateCurrentNumber: function updateCurrentNumber() {\n      var _this3 = this;\n\n      SimpleStorage.deployed().then(function (instance) {\n        return instance.get();\n      }).then(function (r) {\n        console.log(r.toNumber());\n        _this3.currentNumber = r.toNumber();\n      });\n    }\n  }\n};",{"version":3,"sources":["SimpleStorage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AAEA;QAEA;wBACA;;eAEA;uBACA;eACA;gBACA;qBACA,AACA;AANA;AAOA;;AACA;;qCACA;mBACA,ySACA;;2BACA;WACA;mBACA,2QACA;;sDACA;AAEA;;mCACA;8CACA;uBACA;sBACA;wBACA;AACA;AAEA;;4BACA;wBACA;AACA;AACA;;2BACA;oBACA;wBACA;iCACA;gCACA;;cACA;AACA;AACA;AACA;;;AAEA;;qBACA;2BACA;;uBACA;;0BACA;yBACA;;eACA;AACA,4BACA;sBACA;yBACA;AACA;AACA;;AACA;;;;2BACA;sBACA;iCACA;AACA;AACA,AACA;AApBA;AA3CA","sourceRoot":"src\\components","sourcesContent":["<template>\n  <div class=\"simplestorage\">\n    <div class=\"content\">\n      <h3>Example of a simple storage contract</h3>\n      <p v-if=\"contractAddress\">The contract is deployed at {{contractAddress}}</p>\n      <p v-if=\"!contractAddress\">No contracts found</p>\n      <p v-if=\"account\">Current account: {{account}}</p>\n      <p v-if=\"!account\">No accounts found</p>\n      <input v-model=\"newValue\" type=\"number\">\n      <button @click=\"updateValue\">Update value in the contract</button>\n      <p v-if=\"currentNumber\">Value read from the contract: {{currentNumber}}</p>\n      <p v-if=\"!currentNumber\">Value not set</p>\n    </div>\n    <div class=\"message\" v-if=\"message\">{{message}}</div>\n  </div>\n</template>\n\n<script>\nimport Web3 from 'web3'\nimport contract from 'truffle-contract'\nimport artifacts from '../../build/contracts/SimpleStorage.json'\nconst SimpleStorage = contract(artifacts)\n\nexport default {\n  name: 'SimpleStorage',\n  data() {\n    return {\n      message: null,\n      contractAddress: null,\n      account: null,\n      newValue: 0,\n      currentNumber: 0\n    }\n  },\n  created() {\n    if (typeof web3 !== 'undefined') {\n      console.warn(\"Using web3 detected from external source. If you find that your accounts don't appear or you have 0 Fluyd, ensure you've configured that source properly. If using MetaMask, see the following link. Feel free to delete this warning. :) http://truffleframework.com/tutorials/truffle-and-metamask\")\n      // Use Mist/MetaMask's provider\n      web3 = new Web3(web3.currentProvider)\n    } else {\n      console.warn(\"No web3 detected. Falling back to http://127.0.0.1:8545. You should remove this fallback when you deploy live, as it's inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask\")\n      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n      web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\"))\n    }\n\n    SimpleStorage.setProvider(web3.currentProvider)\n    web3.eth.getAccounts((err, accs) => {\n      if (err != null) {\n        console.error(err)\n        this.message = \"There was an error fetching your accounts. Do you have Metamask, Mist installed or an Ethereum node running? If not, you might want to look into that\"\n        return\n      }\n\n      if (accs.length == 0) {\n        this.message = \"Couldn't get any accounts! Make sure your Ethereum client is configured correctly.\"\n        return\n      }\n      this.account = accs[0];\n      SimpleStorage.deployed()\n        .then((instance) => instance.address)\n        .then((address) => {\n          this.contractAddress = address\n          this.updateCurrentNumber()\n        })\n    })\n  },\n  methods: {\n    updateValue() {\n      this.message = \"Transaction started\";\n      return SimpleStorage.deployed()\n        .then((instance) => instance.set(this.newValue, {from: this.account}))\n        .then(() => {\n          this.message = \"Transaction done\"\n          this.updateCurrentNumber()\n        })\n        .catch((e) => {\n          console.error(e)\n          this.message = \"Transaction failed\"\n        })\n    },\n    updateCurrentNumber() {\n      SimpleStorage.deployed().then((instance) => instance.get()).then((r) => {\n        console.log(r.toNumber())\n        this.currentNumber = r.toNumber()\n      });\n    },\n  },\n}\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.content {\n  padding: 13px 13px 39px 13px;\n}\n.message {\n  background: #eee;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  text-align: center;\n  font-size: 13px;\n  line-height: 1;\n  padding: 13px;\n}\n</style>\n"]}]}